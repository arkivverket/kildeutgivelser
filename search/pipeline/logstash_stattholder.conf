input {
    jdbc {
        tags => "subject"
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/app/drivers/postgresql-42.2.5.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        statement => 'SELECT ev_o.id as "occ_id", sub.id, sub.id as "sub_id", sub.project_id, sub.date_created, sub.date_modified,
                        pub.name as "publication_name", pub_c.name  as "collection_name",
                        sub.first_name, sub.last_name, sub.type, sub.place_of_birth, sub.occupation, sub.preposition, sub.full_name,
                        sub.description, sub.legacy_id, sub.date_born, sub.date_deceased, sub.source,
                        ev_o.publication_id, ev_o.publication_version_id, ev_o.publication_manuscript_id, ev_o.publication_facsimile_id,
                        ev_o.publication_comment_id, ev_o.publication_facsimile_page, pub_c.id as "publication_collection_id",
                        pub.published as "publication_published", pub.published  as "published",
                        sub.deleted as "sub_deleted", ev_c.deleted as "ev_c_deleted", ev_o.deleted as "ev_o_deleted"
                        FROM event ev
                        JOIN event_connection ev_c ON ev_c.event_id = ev.id
                        JOIN event_occurrence ev_o ON ev_o.event_id = ev.id
                        JOIN publication pub ON pub.id = ev_o.publication_id
                        JOIN publication_collection pub_c ON pub_c.id = pub.publication_collection_id
                        JOIN subject sub ON ev_c.subject_id = sub.id WHERE ev.deleted != 1 AND sub.deleted != 1 AND ev_c.deleted != 1
                        AND ev_o.deleted != 1 AND pub_c.deleted != 1 AND pub.deleted != 1'
        schedule => "*/5 * * * *"
    }
}

filter
{
    if [date_born] {
        if [date_born] =~ /[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,2} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}/ {
            date {
                match => [ "date_born", "yyyy-MM-dd HH:mm:ss" ]
                target => "date_born_date"
            }
        }
        if [date_born] =~ /[0-9]{1,4}/ {
            date {
                match => [ "date_born", "yyyy" ]
                target => "date_born_date"
            }
        }
    }
    if [date_deceased] {
        if [date_deceased] =~ /[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,2} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}/ {
            date {
                match => [ "date_deceased", "yyyy-MM-dd HH:mm:ss" ]
                target => "date_deceased_date"
            }
        }
        if [date_deceased] =~ /[0-9]{1,4}/ {
            date {
                match => [ "date_deceased", "yyyy" ]
                target => "date_deceased_date"
            }
        }
    }
}


## Add your filters / logstash plugins configuration here
output {
    if "subject" in [tags]{
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "subject"
            document_id => "%{[sub_id]}"
        }
    }
}
